import React, { Component } from 'react';
import d3 from "d3";
// import d3geo from "d3-geo-projection";
import topojson from "topojson";

import './WorldMap.css';


export default class WorldMap extends Component {
	constructor(props) {
		super(props);
		this.projection = null;
	}

	getProjection() {
		return this.projection;
	}
	componentDidMount() {
		var width = this.props.width || 960,
		    height = this.props.height || 580;

		var color = d3.scale.category10();

		var projection = d3.geo.albers()
		    .scale(170)
		    .translate([width / 2, height / 2])
		    .precision(.1);

		var path = d3.geo.path()
		    .projection(projection);

		var graticule = d3.geo.graticule();

		var svg = d3.select("body").append("svg")
		    .attr("width", width)
		    .attr("height", height);

		svg.append("defs").append("path")
		    .datum({type: "Sphere"})
		    .attr("id", "sphere")
		    .attr("d", path);

		svg.append("use")
		    .attr("class", "stroke")
		    .attr("xlink:href", "#sphere");

		svg.append("use")
		    .attr("class", "fill")
		    .attr("xlink:href", "#sphere");

		svg.append("path")
		    .datum(graticule)
		    .attr("class", "graticule")
		    .attr("d", path);

		d3.json("./world-50m.json", function(error, world) {
		  if (error) throw error;

		  var countries = topojson.feature(world, world.objects.countries).features,
		      neighbors = topojson.neighbors(world.objects.countries.geometries);

		  svg.selectAll(".country")
		      .data(countries)
		    .enter().insert("path", ".graticule")
		      .attr("class", "country")
		      .attr("d", path)
		      .style("fill", function(d, i) { return color(d.color = d3.max(neighbors[i], function(n) { return countries[n].color; }) + 1 | 0); });

		  svg.insert("path", ".graticule")
		      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))
		      .attr("class", "boundary")
		      .attr("d", path);
		});

		d3.select(self.frameElement).style("height", height + "px");
	}
	render() {
		return (
			<div className="WorldMap">
			<h2>Map of World</h2>
				<svg
					ref={(svg) => {this.svg = svg; }}>
				</svg>
			</div>);
	}
}